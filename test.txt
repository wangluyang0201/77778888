 
目次
1	はじめに	6
2	システム構成	7
2.1	システム構成図	7
2.2	サービス構成	9
2.2.1	リソースグループ	9
2.2.2	サービス一覧	9
2.3	サーバー構成	11
2.3.1	Webサーバー(Lambda)	11
2.3.2	データベース(DynamoDB)	11
2.3.3	認証基盤(Cognito)	12
2.3.4	ストレージ(S3)	12
2.4	ソフトウェア構成	15
2.5	ネットワーク構成	15
2.5.1	AWSリージョン	15
2.5.2	VPC	15
2.5.3	サブネット	15
2.5.4	ネットワークACL	15
2.5.5	セキュリティグループ	16
2.5.6	名前解決	16
2.5.7	ルートテーブル	16
3	可用性	17
3.1	耐障害性	17
3.2	災害対策	17
4	拡張性	18
4.1	拡張性設計	18
5	保守性	19
5.1	バックアップ・リストア	19
5.1.1	バックアップ	19
5.1.2	リストア	19
5.2	監視	19
5.2.1	監視方式	19
5.2.2	CloudWatchメトリクス保存期間	19
5.2.3	監視状況確認方法	20
5.2.4	しきい値監視	20
5.2.5	監視項目	20
5.3	ログ管理	28
5.3.1	ログ管理方式	29
5.3.2	ログ保存期間	30
5.3.3	ログ監視	30
5.4	時刻同期	30
5.5	ソフトウェアのアップデート	30
6	セキュリティ	31
6.1	ユーザー管理	31
6.2	ロール管理	31
6.3	データ暗号化方針	32
6.4	Webアクセス	32
6.4.1	ACM	32
6.4.1	AWS WAF	33
6.4.2	CloudFront	35
6.4.3	API Gateway	38
6.5	ウィルス対策	39
 
1	はじめに
本書はまなび+(以下、本システム)のインフラ構成、機能の実現方法、及び運用方式について記載する。
なお、本システムについてはパブリッククラウドサービスであるAmazon Web Services(以下、AWS)を利用して構築する。


	 
2	システム構成
2.1	システム構成図
以下に本システムのシステム構成図を示す。
 
 
なお、本システムは同時アクセス数の増加に対して迅速な対応を可能とするため、サーバレス構成を採用する。
サーバレス構成とすることで、以下4点の利点を享受することができる。
 


 
2.2	サービス構成
本システムで使用するサービスについて記載する。

2.2.1	リソースグループ
本システムではすべてのサービスに共通して以下のリソースグループを指定する。
リソースグループを設定することにより、AWSマネジメントコンソールで関連するサービス一覧を表示することや、リソースグループ別に利用費を確認することが可能となる。
	本番環境	検証環境
グループ名	Manabi Plus
グループタイプ	タグベース
リソースタイプ	サポートされるすべてのリソースタイプ
タグキー	Projct
オプションのタグ値	Manabi Plus
タグキー	Environment
オプションのタグ値	Production	Staging

2.2.2	サービス一覧
以下に本システムで使用するサービス一覧とその概要を記載する。
本システムではすべてのサービスをCloudFormationで管理する
CloudFormationではコードでインフラ環境を管理するInfrastructure as Codeを実現することにより、AWSリソースのコレクションをモデリングし、迅速に一貫してプロビジョニングし、ライフサイクル全体で管理することが容易となる。
サービス	システム構成図内の表記	概要
AWS WAF	WAF	可用性、セキュリティ侵害、リソースの過剰消費といった一般的なWebの脆弱性からWebアプリケーションまたはAPIを保護するWebアプリケーションファイアウォール。
CloudFront	同左	低レイテンシーの高速転送により世界中の視聴者に安全に配信する高速コンテンツ配信ネットワーク (CDN) サービス。
API Gateway	同左	API の作成、公開、保守、モニタリング、保護を行います。API は、アプリケーションがバックエンドサービスからのデータ、ビジネスロジック、機能にアクセスするための「フロントドア」として機能する。
S3	Webサイト
データストレージ
バックアップストレージ	拡張性と耐久性を兼ね揃えたクラウドストレージ。
Route53	DNS	可用性と拡張性に優れたクラウドのDNSサービス。ドメイン登録、DNSルーティング、ヘルスチェックの3つの主要な機能を任意の組み合わせで実行可能。
CloudWatch	リソース監視
ログ監視	ログ、メトリクス、およびイベントという形式でモニタリングデータと運用データを収集し、AWSのサーバーで実行されるAWSのリソース、アプリケーション、およびサービスの統合されたビューをユーザーに提供。
CloudTrail	API監視	AWS アカウントのガバナンス、コンプライアンス、運用監査、リスク監査を行うためのサービス。CloudTrail を使用すると、AWS インフラストラクチャ全体でアカウントアクティビティをログに記録し、継続的に監視し、保持できる。
Kinesis Data Firehose	ログ収集	ストリーミングデータをデータレイクやデータストア、分析サービスに確実にロードする最も簡単な方法を提供する。
SNS	アラート通知	フルマネージド型メッセージングサービス。SMS やモバイルプッシュ、電子メールを介してユーザーと直接通信が可能。
ACM	証明書管理	SSL証明書のプロビジョニング、管理、デプロイを簡単にする。AWS Certificate Manager を使用すれば、SSL証明書の購入、アップロード、更新という時間のかかるプロセスを手動で行う必要がなくなる。
IAM	権限管理	AWS のサービスやリソースへのアクセスを安全に管理する。IAM を使用すると、AWS のユーザーとグループを作成および管理し、アクセス権を使用して AWS リソースへのアクセスを許可および拒否が可能となる。
Lambda	コード実行	サーバーのプロビジョニングや管理をすることなく、コードを実行。コードは他の AWS サービスから自動的にトリガーするよう設定することも、ウェブやモバイルアプリケーションから直接呼び出すよう設定することも可能。
DynamoDB	NoSQL DB	規模に関係なく数ミリ秒台のパフォーマンスを実現する、key-value およびドキュメントデータベース。完全マネージド型マルチマスターで耐久性があるデータベースで、セキュリティ、バックアップおよび復元と、インターネット規模のアプリケーション用のメモリ内キャッシュが組み込まれている。
KMS	暗号鍵管理	暗号化キーを簡単に作成して管理し、幅広い AWS のサービスやアプリケーションでの使用を制御できるようになる。セキュアで弾力性の高いサービスで、キーを保護するために FIPS 140-2 の検証済みまたは検証段階のハードウェアセキュリティモジュールを使用する。
Cognito	認証基盤	ウェブアプリケーションおよびモバイルアプリに素早く簡単にユーザーのサインアップ/サインインおよびアクセスコントロールの機能を提供する。
2.3	サーバー構成
以下に本システムのサーバー構成を示す。
本番環境と検証環境を個別に管理するため、でサーバーを分離する。
各種サーバーは必要最小限のサービスから必要最小限の処理のみアクセスを許可する。

2.3.1	Webサーバー(Lambda)
本システムではWebサーバーとしてLambdaサービスを利用する。
以下にLambdaの定義を示す。
リソース	必要性	備考
Code	必須	Lambdaを実行するコード、S3に格納
Role	必須	他のサービスにサクセスするロール
FunctionName	必須	名前
Runtime	必須	言語指定、python3.8
Timeout	必須	タイムアウト時間、デフォルト3秒（1秒-900秒）
Tag	必須	環境を分かりやすいため
MemorySize	必須	デフォルト128MB（128MB-10240MB）
Handler	必須	イベントを処理する関数コード内のメソッドです。関数が呼び出されると、Lambda はハンドラーメソッドを実行します。
[ファイル名].[関数名] 例：syuugakusya.lambda_handler
Environment	必要	環境変数、Lambdaに環境変数を渡す


関数名	メモリ(MB)	タイムアウト	環境変数
	128	3秒	

ロール名	コード.zip名	Runtime	ハンドラ
		Python3.8	

2.3.2	データベース(DynamoDB)
本システムではデータベースとしてDynamoDBサービスを利用する。
以下にDynamoDBの定義を示す。
なお、テーブル設定のデフォルト設定は以下を
・セカンダリインデックスなし。
・Auto Scaling のキャパシティーを AnyScale のデフォルト機能を示すテーブルの作成ページで 70% のターゲット使用率 (最低キャパシティーは 5 つの読み込みと 5 つの書き込み) に設定。
・デフォルトの暗号化タイプによる保管時の暗号化。
リソース	必要性	備考
KeySchema	必須	パーティションキーとソートキーを指定します。 KeySchema プロパティの属性は、AttributeDefinitions プロパティでも定義する必要があります。
AttributeDefinitions	必須	
ProvisionedThroughput	必須	プロビジョンド読み込み、書き込みキャパシティーユニット
（デフォルト：5）
CapacityScalableTarget	必須	キャパシティー：MaxCapacity: 100、MinCapacity: 5
ScalingPolicy	必須	デフォルトのターゲット使用率：　70％
デフォルトのプロビジョニングされたスループットを変更するまで待機する秒数：　60秒
TableName	必須	
Tag	必須	
環境変数	必須	


テーブル名	パーティションキー	ソートキー	環境変数	テーブル設定
				デフォルト設定



2.3.3	認証基盤(Cognito)
XXXXXX
リソース	必要性	備考
UserPoolName	必須	名前
UserPoolTags	必須	タグ
PasswordPolicy	必須	デフォルトで数字、特殊文字、大小文字を必要とする
一時パスワードの有効期限：7日間
Schema	必須	エンドユーザーをどのようにサインインさせる
デフォルト標準属性:emailが必須とする
AutoVerifiedAttributes	必須	自動検証された属性、デフォルトはemailとする
AliasAttributes	必須	エイリアス属性：email、phone_number、preferred_usernameに設定する
SmsVerificationMessage	必須	デフォルト中身：検証コードは {####} です。
EmailVerificationMessage	必須	デフォルト中身：検証コードは {####} です。
EmailVerificationSubject	必須	デフォルト中身：検証コード
SmsAuthenticationMessage	必須	デフォルト中身：検証コードは {####} です。
EmailConfiguration	必須	デフォルトEmailSendingAccountは"COGNITO_DEFAULT"とする
AdminCreateUserConfig	必須	ユーザーに自己サインアップを許可する
デフォルトは管理者が設定した一時パスワードが使用されない有効期間：7日間
UsernameConfiguration	必須	デフォルトは大文字と小文字を区別しない

UserPool名	パスワードポリシー	自動検証	エイリアス検証	メッセージ設定
		Email	Email, phone_number, preferred_username	デフォルト設定


2.3.4	ストレージ(S3)
本システムではストレージとしてS3サービスを利用する。
以下にS3の定義を示す。

(1)	Webサイト
項目	設定値	備考
バケット名	本番環境：prod-manabiplus-web
検証環境：stag-manabiplus-web	
アクセス設定	パブリックアクセスをすべてブロック	
バケットポリシー		
	プリンシパル	Webサイト用CloudFront	Webサイト用CloudFrontからのみアクセス可とする。
	許可アクション	読取りのみ可能	
デフォルトの暗号化	無効	機密データが含まれないため暗号化不要。
サーバーアクセスのログ記録	有効	
	ターゲットバケット	S3(ログストレージ)	
	プレフィックス	webacclog	
静的ウェブサイトホスティング	有効	


(2)	データストレージ
項目	設定値	備考
バケット名	本番環境：prod-manabiplus-data
検証環境：stag-manabiplus-data	
アクセス設定	パブリックアクセスをすべてブロック	
バケットポリシー		
	プリンシパル	Lambda	Lambdaのロールを指定
	許可アクション	読み書き可能	
	条件	HTTPS通信のみ許可	
デフォルトの暗号化	Amazon S3 キー (SSE-S3)	機密データが含まれるため暗号化する。
サーバーアクセスのログ記録	有効	
	ターゲットバケット	S3(ログストレージ)	
	プレフィックス	dataacclog	

(3)	アプリケーション用ストレージ
項目	設定値	備考
バケット名	本番環境：prod-manabiplus-application
検証環境：stag-manabiplus-application	
アクセス設定	パブリックアクセスをすべてブロック	
バケットポリシー		
	プリンシパル	Lambda	
	許可アクション	読取りのみ可能	
デフォルトの暗号化	無効	機密データが含まれないため暗号化不要。
サーバーアクセスのログ記録	有効	
	ターゲットバケット	S3(ログストレージ)	
	プレフィックス	appacclog	

(4)	バックアップストレージ
項目	設定値	備考
バケット名	本番環境：prod-manabiplus-backup
検証環境：stag-manabiplus-backup
大阪リージョン：dr-manabiplus-backup	
アクセス設定	パブリックアクセスをすべてブロック	
バケットポリシー		
	プリンシパル		
	許可アクション	ｓ3:GetObject	
デフォルトの暗号化	Amazon S3 キー (SSE-S3)	機密データが含まれるため暗号化する。
サーバーアクセスのログ記録	有効	
	ターゲットバケット	S3(ログストレージ)	
	プレフィックス	bkacclog	
レプリケーションルール		本番環境のみ
大阪リージョンにレプリケーション

(5)	ログストレージ
項目	設定値	備考
バケット名	本番環境：prod-manabiplus-log
検証環境：stag-manabiplus-log	
アクセス設定	パブリックアクセスをすべてブロック	
バケットポリシー		
	プリンシパル	AWS WAF
CloudFront
S3	
	許可アクション	読み書き可能	
デフォルトの暗号化	Amazon S3 キー (SSE-S3)	
ライフサイクルルール	保存期間を25ヶ月(761日)とする。
	オブジェクトの現行バージョンの有効期限を761日とし、有効期限が切れたオブジェクトを完全に削除する。

(6)	CloudTrailログストレージ
項目	設定値	備考
バケット名	本番環境：prod-manabiplus-cloudtrail
検証環境：stag-manabiplus-cloudtrail	
アクセス設定	パブリックアクセスをすべてブロック	
バケットポリシー		
	プリンシパル	CloudTrail	
	許可アクション	読み書き可能	
デフォルトの暗号化	Amazon S3 キー (SSE-S3)	
サーバーアクセスのログ記録	有効	
	ターゲットバケット	S3(ログストレージ)	
	プレフィックス	ctacclog	
ライフサイクルルール	保存期間を25ヶ月(761日)とする。
	オブジェクトの現行バージョンの有効期限を761日とし、有効期限が切れたオブジェクトを完全に削除する。

2.4	ソフトウェア構成
本システムのソフトウェアは全てAWSマネージドサービスを利用し、ユーザー管理によるソフトウェアは導入しない。

2.5	ネットワーク構成
本システムのネットワーク構成を以下に示す。

2.5.1	AWSリージョン
本システムの利用者は日本国内に限定される。
利用者のネットワークレイテンシを最小化するため、本システムは東京リージョンに構築する。
AWSリージョン	アジアパシフィック (東京)

2.5.2	VPC
本システムはサーバレス構成であり、AWSが管理・提供するネットワーク構成で実行されるため
VPCの設計構築は不要である。

2.5.3	サブネット
本システムはサーバレス構成であり、AWSが管理・提供するネットワーク構成で実行されるため
サブネットの設計構築は不要である。

2.5.4	ネットワークACL
本システムはサーバレス構成であり、AWSが管理・提供するネットワーク構成で実行されるため
ネットワークACLの設計構築は不要である。

2.5.5	セキュリティグループ
本システムはサーバレス構成であり、AWSが管理・提供するネットワーク構成で実行されるため
セキュリティグループの設計構築は不要である。

2.5.6	名前解決
Route53のプライベートホストゾーンを使用する。

2.5.7	ルートテーブル
本システムはサーバレス構成であり、AWSが管理・提供するネットワーク構成で実行されるため
ルートテーブルの設計構築は不要である。

 
3	可用性
3.1	耐障害性
本システムが利用する各種サービスはすべてAWSが管理・提供するAWSグローバルインフラストラクチャ上で実行される。
本システムは東京リージョン内の複数のアベイラビリティーゾーン(以下AZ)で稼働し、単一のAZ障害からシステムを保護する。

AWSのグローバルインフラストラクチャは、AWSリージョンとAZを中心として構成されている。AWSリージョンには、低レイテンシー、高いスループット、そして高度の冗長ネットワークで接続されている複数の物理的に独立・隔離されたAZがある。
AZは、従来の単一または複数のデータセンターインフラストラクチャよりも可用性、耐障害性、および拡張性が優れており、AZ間で中断することなく自動的にフェイルオーバーするアプリケーションとデータベースを運用することができる。

3.2	災害対策
災害発生時にフェイルオーバーしてサービスを継続する際、及び通常運用時のデータレプリケーションのネットワークレイテンシ最小化の観点から、東京リージョンに構築する本システムの災害対策リージョンとして大阪リージョンが最適である。
しかし、2021年3月に開設された大阪リージョンは本書執筆時(2021年6月)でAWS WAF / Cognitoのサービスに対応していないため、フェイルオーバーすることができない。そのため、本システムでは災害対策を考慮しない。
大阪リージョンがAWS WAF / Cognitoのサービスに対応した後に災害対策について改めて検討することとする。


 
4	拡張性
4.1	拡張性設計
本システムでは、負荷状況に応じて各種リソースを自動で拡張する。
サーバー	対象リソース	拡張方式	変更時サーバー停止の必要性	備考
データベース(DynamoDB)	ストレージ容量	事実上無制限まで自動拡張	不要	
	スループット	事実上無制限まで自動拡張	不要	一部手動によるパラメータ調整の必要あり
ストレージ(S3)	ストレージ容量	事実上無制限まで自動拡張	不要	

 
5	保守性
5.1	バックアップ・リストア
本システムのバックアップ・リストアの方式を示す。

5.1.1	バックアップ
対象	保存期間	スケジュール	一次バックアップ
保存先	二次バックアップ
保存先
DBデータ	35日間	連続	東京リージョン内
バックアップストレージ	-
		日次		大阪リージョン内
バックアップストレージ
データストレージ		日次		

5.1.2	リストア
一次バックアップ保存先にアクセス可能な場合は一次バックアップ保存先から復旧する。
東京リージョン障害発生時等、一次バックアップ保存先にアクセス不可の場合は二次バックアップ保存先から復旧する。
対象	一次バックアップからのリストア	二次バックアップからのリストア
DBデータ	35日以内の任意の時点への復旧が可能。	バックアップ取得時点への復旧が可能。
データストレージ	バックアップ取得時点への復旧が可能。	

5.2	監視
本システムの監視について記載する。

5.2.1	監視方式
本システムはCloudWatchサービスにより監視する。

5.2.2	CloudWatchメトリクス保存期間
メトリクスの保存期間はデフォルト値である以下を採用する。

期間	保存期間
60秒未満のデータポイント	3時間
60秒(1分)のデータポイント	15日間
300秒(5分)のデータポイント	63日間
3600秒(1時間)のデータポイント	455日間(15ヶ月)

5.2.3	監視状況確認方法
本システムの監視状況はAWSマネジメントコンソールのCloudWatchページで確認する。

5.2.4	しきい値監視
本システムはサーバレス構成であり、利用する各種サービスは自動でスケールするため、しきい値監視は行わない。
運用上、問題が発生した場合にしきい値監視の実施を検討する。

5.2.5	監視項目
本システムの監視項目をサービス別に記載する。

(1)	ACM
メトリクス	内容
DaysToExpiry	証明書の有効期限が切れるまでの日数

(2)	API Gateway
本番環境のみ監視する。本番環境ステージの詳細CloudWatchメトリクスを有効化する必要がある。
メトリクス	内容
4XXError	クライアント側エラーの数
5XXError	サーバー側エラーの数
CacheHitCount	API キャッシュから配信されたリクエストの数
CacheMissCount	バックエンドから提供されたリクエストの数
Count	API リクエストの合計数
IntegrationLatency	API Gateway がバックエンドにリクエストを中継してから、バックエンドからレスポンスを受け取るまでの時間

(3)	AWS WAF
メトリクス	内容
AllowedRequests	許可された、ウェブリクエストの数。
BlockedRequests	ブロックされたウェブリクエストの数。
CountedRequests	カウントされたウェブリクエストの数。
PassedRequests	渡されたリクエストの数。これは、規則グループのどの規則にも一致しないで、規則グループの評価を通過する要求にのみ使用されます。

(4)	CloudFront
デフォルトのメトリクスを監視対象とする。
追加のメトリクスとして以下が監視可能であるが、追加料金が必要となるためパフォーマンスに問題が生じた場合に監視の実施を検討する。
・キャッシュヒット率 / オリジンのレイテンシー / ステータスコード別のエラー率
メトリクス	内容
リクエスト	すべての HTTP メソッド、および HTTP リクエストと HTTPS リクエストの両方について CloudFront が受信したビューワーリクエストの総数。
ダウンロードされたバイト数	GET リクエスト、HEAD リクエスト、および OPTIONS リクエストに対してビューワーがダウンロードしたバイト総数
アップロードされたバイト数	POST リクエストと PUT リクエストを使用して CloudFront でビューワーがオリジンにアップロードしたバイト総数
4xxエラー率	レスポンスの HTTP ステータスコードが 4xx であるすべてのビューワーリクエストの割合
5xxエラー率	レスポンスの HTTP ステータスコードが 5xx であるすべてのビューワーリクエストの割合
合計エラー率	レスポンスの HTTP ステータスコードが 4xx または 5xx であるすべてのビューワーリクエストの割合

(5)	Cognito
メトリクス	内容
SignUpSuccesses	Amazon Cognito ユーザープールに対して成功したユーザー登録リクエストの総数
SignUpThrottles	Amazon Cognito ユーザープールに対してスロットリングされたユーザー登録リクエストの総数
SignInSuccesses	Amazon Cognito ユーザープールに対して成功したユーザー認証リクエストの総数
SignInThrottles	Amazon Cognito ユーザープールに対してスロットリングされたユーザー認証リクエストの総数
TokenRefreshSuccesses	Amazon Cognito ユーザープールに対して実行された Amazon Cognito トークンの更新に成功したリクエストの合計数
TokenRefreshThrottles	Amazon Cognito ユーザープールに対して実行された Amazon Cognito トークン更新のスロットリングされたリクエストの合計数
FederationSuccesses	Amazon Cognito ユーザープールに対して成功した ID フェデレーションリクエストの総数
FederationThrottles	Amazon Cognito ユーザープールに対してスロットリングされた ID フェデレーションリクエストの総数
CallCount	カテゴリに関連して顧客が発信したコールの総数
ThrottleCount	カテゴリに関連するスロットリングされたコールの総数

(6)	DynamoDB
メトリクス	内容
AccountMaxReads	アカウントで使用できる読み込みキャパシティーユニットの最大数
AccountMaxTableLevelReads	アカウントのテーブルまたはグローバルセカンダリインデックスで使用できる読み込みキャパシティーユニットの最大数
AccountMaxTableLevelWrites	アカウントのテーブルまたはグローバルセカンダリインデックスで使用できる書き込みキャパシティーユニットの最大数
AccountMaxWrites	アカウントで使用できる書き込みキャパシティーユニットの最大数
AccountProvisionedReadCapacityUtilization	アカウントがプロビジョンド読み込みキャパシティー単位の割合
AccountProvisionedWriteCapacityUtilization	アカウントがプロビジョンド書き込みキャパシティー単位の割合
AgeOfOldestUnreplicatedRecord	Kinesis データストリームにレプリケートされていないレコードからの経過時間
ConditionalCheckFailedRequests	条件付き書き込みの実行に失敗した回数
ConsumedChangeDataCaptureUnits	消費されたチェンジ・データ・キャプチャ・ユニットの数
ConsumedReadCapacityUnits	指定された期間に消費された読み込みキャパシティーユニットの数
ConsumedWriteCapacityUnits	指定された期間に消費された書き込みキャパシティーユニットの数
MaxProvisionedTableReadCapacityUtilization	プロビジョニングされた読み取りキャパシティーユニットのうち、アカウントの最も高いプロビジョニングされた読み取りテーブルまたはグローバルセカンダリインデックスが使用している割合
MaxProvisionedTableWriteCapacityUtilization	プロビジョニングされた書き込みキャパシティーのうち、アカウントの最も高いプロビジョニングされた書き込みテーブルまたはグローバルセカンダリインデックスが使用している割合
OnlineIndexConsumedWriteCapacity	新しいグローバルセカンダリインデックスをテーブルに追加するときに消費される書き込みキャパシティーユニットの数
OnlineIndexPercentageProgress	新しいグローバルセカンダリインデックスがテーブルに追加されるときの完了率
OnlineIndexThrottleEvents	新しいグローバルセカンダリインデックスをテーブルに追加するときに発生する書き込みスロットルイベントの数
PendingReplicationCount	（グローバルテーブル用）
1 つのレプリカテーブルに書き込まれていても、グローバルテーブル内の別のレプリカにはまだ書き込まれていないアイテムの更新の数
ProvisionedReadCapacityUnits	テーブルまたはグローバルセカンダリインデックスのプロビジョンド読み込みキャパシティー単位の数
ProvisionedWriteCapacityUnits	テーブルまたはグローバルセカンダリインデックスのプロビジョンド書き込みキャパシティー単位の数
ReadThrottleEvents	テーブルまたはグローバルセカンダリインデックスのプロビジョニングされた読み込みキャパシティーユニットを超える DynamoDB へのリクエスト
ReplicationLatency	(グローバルテーブル用)
更新された項目が 1 つのレプリカテーブルの DynamoDB ストリームに表示され、その項目がグローバルテーブルの別のレプリカに表示されるまでの経過時間
ReturnedBytes	Amazon DynamoDB Streamによって返されるバイト数
ReturnedItemCount	Query または Scan オペレーションの結果として返された項目数
ReturnedRecordsCount	Amazon DynamoDB Streamによって返されるストリームレコードの数
SuccessfulRequestLatency	指定した期間中に成功した DynamoDB または Amazon DynamoDB ストリームへのリクエスト数とリクエストが成功するまでの経過時間
SystemErrors	指定された期間に HTTP 500 ステータスコードを生成する DynamoDB または Amazon DynamoDB ストリームへのリクエスト数
TimeToLiveDeletedItemCount	指定した期間中に存続期間 (TTL) によって削除されたアイテムの数
ThrottledPutRecordCount	Kinesis データストリームの容量が不足しているため、Kinesis データストリームへの複製に失敗したレコードの数
ThrottledRequests	リソース（テーブルやインデックスなど）のプロビジョニングされたスループット制限を超える DynamoDB へのリクエスト
TransactionConflict	同じ品目に対する同時要求間のトランザクション競合が原因で、品目レベルの要求が拒否された件数
UserErrors	指定された期間に HTTP 400 ステータスコードを生成する DynamoDB または Amazon DynamoDB ストリームへのリクエスト数
WriteThrottleEvents	テーブルまたはグローバルセカンダリインデックスのプロビジョニングされた書き込みキャパシティーユニットを超える DynamoDB へのリクエスト数

(7)	Kinesis Data Firehose
種別	メトリクス	内容
Amazon S3 への配信	DeliveryToS3.Bytes	指定された期間に Amazon S3 に配信されたバイト数。
	DeliveryToS3.DataFreshness	Kinesis Data Firehose の最も古いレコードの経過時間。
	DeliveryToS3.Records	指定された期間に Amazon S3 に配信されたレコード数。
	DeliveryToS3.Success	すべての Amazon S3 put コマンドの合計に対する正常に実行された Amazon S3 put コマンドの合計。
	BackupToS3.Bytes	指定された期間に バックアップがAmazon S3 に配信されたバイト数。
	BackupToS3.DataFreshness	バックアップに関するKinesis Data Firehose の最も古いレコードの経過時間。
	BackupToS3.Records	指定された期間にバックアップが Amazon S3 に配信されたレコードの数。
	BackupToS3.Success	すべての Amazon S3 バックアップの put コマンドの合計に対する、成功したバックアップの Amazon S3 put コマンドの合計。
-	ResourceCount	アカウントで実行されている指定されたリソースの数

(8)	KMS
メトリクス	内容
SecondsUntilKeyMaterialExpiration	インポートしたキーマテリアルの有効期限までの残りの秒数


(9)	Lambda
種別	メトリクス	内容
呼び出しメトリクス	Invocations	関数コードが実行された回数
	Errors	関数エラーが発生した呼び出しの数
	DeadLetterErrors	非同期呼び出しの場合、Lambda がイベントをデッドレターキューに送信しようとしたが、失敗した回数
	DestinationDeliveryFailures	非同期呼び出しの場合、Lambda がイベントを送信先に送信しようとしたが、失敗した回数
	Throttles	スロットリングされた呼び出しリクエストの数
	ProvisionedConcurrencyInvocations	プロビジョニングされた同時実行で関数コードが実行される回数
	ProvisionedConcurrencySpilloverInvocations	プロビジョニングされたすべての同時実行が使用されているときに、標準同時実行で関数コードが実行される回数。
パフォーマンスメトリクス	Duration	関数コードがイベントの処理に費やす時間
	PostRuntimeExtensionsDuration	関数コードの完了後、拡張のためにランタイムがコードの実行に費やした累積時間
	IteratorAge	ストリームから読み取るイベントソースマッピングの場合、イベントの最後のレコードの所要時間
同時実行メトリクス	ConcurrentExecutions	イベントを処理している関数インスタンスの数
	ProvisionedConcurrentExecutions	プロビジョニングされた同時実行でイベントを処理している関数インスタンスの数
	ProvisionedConcurrencyUtilization	バージョンまたはエイリアスの場合、ProvisionedConcurrentExecutions の値を、割り当て済みのプロビジョニングされた同時実行の合計量で割った値
	UnreservedConcurrentExecutions	同時実行が予約されていない関数によって処理されているイベントの数

(10)	Route53
種別	メトリクス	内容
ヘルスチェック	ChildHealthCheckHealthyCount	Route 53 がモニタリングしているヘルスチェック間で正常なヘルスチェックの数
	ConnectionTime	Route 53 ヘルスチェッカーがエンドポイントとの TCP 接続を確立するのにかかった平均時間
	HealthCheckPercentageHealthy	Route 53 ヘルスチェッカーが選択したエンドポイントを正常であるとみなす割合
	HealthCheckStatus	Route53がチェックしているヘルスチェックエンドポイントのステータスCloudWatch
	SSLHandshakeTime	Route 53 ヘルスチェッカーが SSL ハンドシェイクを完了するまでにかかった平均時間
	TimeToFirstByte	Route 53 ヘルスチェッカーが HTTP または HTTPS リクエストへの応答の先頭バイトを受け取るまでにかかった平均時間
リゾルバー	InboundQueryVolume	インバウンドエンドポイント、またはIPアドレスを対象とし、EndpointId で指定されたエンドポイントを介してネットワークから VPC に転送された DNS クエリの数
	OutboundQueryVolume	アウトバウンドエンドポイントを対象とし、EndpointId で指定されたエンドポイントを介して VPC からネットワークに転送された DNS クエリの数
	OutboundQueryAggregateVolume	アウトバウンドエンドポイント、またはIPアドレスを対象とし、、Amazon VPC からネットワークに転送された DNS クエリの総数

(11)	S3
種別	メトリクス	内容
日次ストレージメトリクス	BucketSizeBytes	ストレージクラス別のバケットに保存されているデータの量
	NumberOfObjects	ストレージクラス別のバケットに保存されたオブジェクトの総数
リクエストメトリクス	AllRequests	タイプに関係なく、Amazon S3 バケットに対して行われた HTTP リクエストの総数
	GetRequests	Amazon S3 バケット内のオブジェクトに対して行われた HTTP GET リクエストの数
	PutRequests	Amazon S3 バケット内のオブジェクトに対して行われた HTTP PUT リクエストの数
	DeleteRequests	Amazon S3 バケットのオブジェクトに対して行われた HTTP DELETE リクエストの数
	HeadRequests	Amazon S3 バケットに対して行われた HTTP HEAD リクエストの数
	PostRequests	Amazon S3 バケットに対して行われた HTTP POST リクエストの数
	SelectRequests	Amazon S3 バケットのオブジェクトに対して行われた Amazon S3 の SELECT Object Content リクエストの数
	SelectBytesScanned	Amazon S3 バケットの Amazon S3 の SELECT Object Content リクエストでスキャンされたデータのバイト数
	SelectBytesReturned	Amazon S3 バケットの Amazon S3 の SELECT Object Content リクエストで返されたデータのバイト数
	ListRequests	バケットの内容をリストする HTTP リクエストの数
	BytesDownloaded	Amazon S3 バケットに対する、レスポンスに本文が含まれるリクエストに対してダウンロードしたバイト数
	BytesUploaded	Amazon S3 バケットに対する、リクエストボディを含むアップロードしたバイト数
	4xxErrors	Amazon S3 バケットに対して行われた、値が 0 または 1 の HTTP 4xx クライアントエラーステータスコードリクエストの数
	5xxErrors	Amazon S3 バケットに対して行われた、値が 0 または 1 の HTTP 5xx サーバーエラーステータスコードリクエストの数
	FirstByteLatency	Amazon S3 バケットがリクエスト全体を受信してからレスポンスの返信が開始するまでのリクエストあたりの時間
	TotalRequestLatency	最初のバイトが受信されてから Amazon S3 バケットに最後のバイトが送信されるまでのリクエストあたりの経過時間

(12)	SNS
メトリクス	内容
NumberOfMessagesPublished	Amazon SNS トピックに対して発行されたメッセージ数
NumberOfNotificationsDelivered	Amazon SNS トピックからそのトピックにサブスクライブしているエンドポイントに正常に配信されたメッセージ数
NumberOfNotificationsFailed	Amazon SNS が配信に失敗したメッセージの数
NumberOfNotificationsFilteredOut	サブスクリプションフィルタポリシーによって拒否されたメッセージの数
NumberOfNotificationsFilteredOut-InvalidAttributes	メッセージの属性が無効であるため、たとえば属性の JSON 形式が正しくないため、サブスクリプションフィルタポリシーによって拒否されたメッセージの数
NumberOfNotificationsFilteredOut-NoMessageAttributes	メッセージに属性がないため、サブスクリプションフィルタポリシーによって拒否されたメッセージの数
NumberOfNotificationsRedrivenToDlq	デッドレターキューに移動されたメッセージの数
NumberOfNotificationsFailedToRedriveToDlq	デッドレターキューに移動できなかったメッセージの数
PublishSize	発行されたメッセージのサイズ
SMSMonthToDateSpentUSD	今月の始めから今日までの SMS メッセージの送信料金
SMSSuccessRate	正常な SMS メッセージ配信のレート

5.3	ログ管理
CloudWatch Logs、S3により本システムのログを管理する。
 
5.3.1	ログ管理方式
本システムのログの管理方式は対象のサービスによって異なる。
以下にログ管理方式と対象サービスについて記載する。
ログ確認方法	ログ格納先	対象ログ	対象サービス	ログ取得方式	備考
AWSマネジメントコンソールCloudWatchページ	CloudWatch Logs	実行ログ	API Gateway
	CloudWatch Logs 	ログレベル：ERROR / INFO。
機密データが記録される可能性があるため、「Log full requests/responses data (完全なリクエスト/レスポンスデータをログに記録する)」は無効にする。
			Lambda		
			Route53		以下の情報を含むパブリック DNS クエリログ
・リクエストされたドメインまたはサブドメイン
・リクエストの日付と時刻
・DNS レコードタイプ (A や AAAA など)
・DNS クエリに応答した Route 53 エッジロケーション
・DNS レスポンスコード (NoError や ServFail など)
		アクセスログ	API Gateway		
		操作ログ
(90日前までのログ)	ACM
API Gateway
AWS WAF
CloudFront
CloudWatch
Cognito
DynamoDB
KMS
Lambda
Route53
S3
SNS	CloudTrail 	
AWSマネジメントコンソールCloudTrailページ	S3	操作ログ
(90日以上前のログ)			
AWSマネジメントコンソールS3ページのS3 Selectクエリ		アクセスログ	AWS WAF	Kinesis Data Firehose	以下の情報を含むWebACLトラフィック情報のログ
・リクエストを受信した時間
・リクエストの詳細
・リクエストが一致したルールのアクション
			CloudFront	CloudFront	
			S3	S3	バケットに対するリクエストの詳細

5.3.2	ログ保存期間
IPAが発表した企業における情報システムのログ管理に関する実態調査によると、一般的にはログの保存期間は1年程度が妥当である。
本システムでは同時期のログを2年間まで遡って確認可能とするため、ログの保存期間を以下とする。
ログ格納先	ログ保存期間	備考
CloudWatch Logs	25ヶ月	
S3	24ヶ月	

5.3.3	ログ監視
本システムのログ監視については、運用上問題が発生した場合に実施を検討する。

5.4	時刻同期
本システムが利用する各種サービスはAWSグローバルインフラストラクチャにより時刻同期する。

5.5	ソフトウェアのアップデート
本システムのソフトウェアはすべてAWSマネージドサービスを利用し、ソフトウェアのアップデートはAWSに一任する。
 
6	セキュリティ
6.1	ユーザー管理
以下のユーザーを作成する。
ユーザ	管理ポリシー	権限
CloudFormation管理ユーザー	AmazonS3FullAccess	
	AmazonDynamoDBFullAccess	DynamoDB管理
	AmazonAPIGatewayAdministrator	API Gateway管理
	AmazonCognitoPowerUser	
	AWSWAFFullAccess	
	AmazonRoute53FullAccess	
	AWSCloudFormationFullAccess	CloudFormation管理
	AWSLambda_FullAccess	
	IAMFullAccess	Linkedロールを作る権限
運用ユーザー		各種ログ確認権限
データストレージのバックアップ・リストア実施権限
バックアップユーザー		データストレージのバックアップ実施権限
アプリケーション開発ユーザー	AmazonCognitoPowerUser	
		S3のReadOnly権限
Lambda管理権限

6.2	ロール管理
各種サービスに以下のロールを付与する。
サービス	権限	備考
Lambda	DynamoDB接続
S3接続	
API Gateway	Lambdaに接続するためのロール	API GatewayのログをCloudWatch Logsに書き込むため
DyanmoDB	オートスケール	

6.3	データ暗号化方針
データ暗号化方針について記載する。
データ	暗号化方針	備考
認証基盤ユーザ情報		
データストレージ		

6.4	Webアクセス
本システムでは以下のサービスを利用し、セキュアなWebアクセス環境を提供する。

6.4.1	ACM
ACMにより以下の特性を持つACM証明書を発行する。
特性	内容
ドメイン検証 (DV)	ACM 証明書はドメイン検証される。
有効期間	ACM 証明書の有効期間は 13 ヶ月 (395 日) 
マネージド型更新とデプロイ	ACM は、ACM 証明書の更新プロセスと、更新後の証明書のプロビジョニングを管理し、証明書の設定ミス、失効、期限切れによるダウンタイムを防止する。
ブラウザとアプリケーショントラスト	ACM証明書は、Google Chrome、Microsoft Internet Explorer と Microsoft Edge、そして Mozilla Firefox および Apple Safari を含むすべての主要なブラウザから信頼されている。
複数のドメイン名	各 ACM 証明書には、少なくとも 1 つの完全修飾ドメイン名 (FQDN) が含まれる必要があり、必要に応じて追加の名前を付け加えることができる。
(例) 「www.example.com」のACM 証明書に「example.com」 を追加
ワイルドカード名	ドメイン名にアスタリスク (*) を使うことで、同じドメイン内の複数のサイトを保護できるワイルドカード名を含む ACM 証明書を作成することができる。
アルゴリズム	以下のパブリックキーアルゴリズムが ACM でサポートされている。
・2048 ビット RSA (RSA_2048)
・4096 ビット RSA (RSA_4096)
・Elliptic Prime Curve 256 ビット (EC_prime256v1)
・Elliptic Prime Curve 384 ビット (EC_secp384r1)

6.4.1	AWS WAF
AWS WAFを利用し、アプリケーションの可用性、セキュリティの侵害、リソースの過剰な消費などに影響を与えかねない一般的なウェブの弱点から保護する。本システムでは、絶えず変化する脅威に対して迅速な対応をとるためにAWSマネージドルールを適用する。
AWSマネージドルールでは新しい脆弱性と脅威が発生した場合、AWSによりルールグループが自動的に更新される。

検証環境ではAWSマネージドルールに一致するリクエストをカウント(監視)するのみとし、ブロックは行わない。
本番環境ではAWSマネージドルールに一致するリクエストをブロックする。
本番環境で正常なリクエストが意図せずブロックされた場合は検証環境でルールの調整と動作検証を行い、本番環境のルールを調整する。

ルールの優先順位についてはIPアドレスによるルール等、限定的な範囲に及ぶルールを優先とし、より低コストで攻撃をブロック可能とする。
優先順位	ルールグループ	説明
1	IP 評価ルールグループ	ボットトラフィック等、接続元に基づいてリクエストをブロックする。
2	AWS WAF ボットコントロールルールグループ	一般的なボットを分類して識別し、一般的に望ましいボットを検証し、ボットの信頼度の高い署名を検出することで、サイトに対するボットのアクティビティを管理する。
3	ユースケース固有のルールグループ	さまざまな AWS WAF ユースケースに対して段階的な保護を提供する。
4	ベースラインルールグループ	さまざまな一般的な脅威に対する一般的な保護を提供する

AWSマネージドルールによるWebACLは以下の通り構成する。
ルールグループ	ルールセット	適用(優先順位)	説明
ベースラインルールグループ	コアルールセット	○(6)	Webアプリケーションに一般的に適用すべきルールセット。高リスクの脆弱性や一般的な脆弱性など、幅広い脆弱性の悪用に対する保護が提供される。
	管理者保護	×
サードパーティーのソフトウェアを実行しないため	公開されている管理ページへの外部アクセスをブロックするためのルールセット。サードパーティーのソフトウェアを実行している場合や、悪意のある攻撃者がアプリケーションへの管理アクセスを得るリスクを軽減したい場合に適用する。
	既知の不正な入力	○(5)	無効であることがわかっており脆弱性の悪用または発見に関連するリクエストパターンをブロックするためのルールセット。悪意のある攻撃者が脆弱なアプリケーションを発見するリスクを軽減する。
ユースケース固有のルールグループ	SQL データベース	○(4)
RDSを使う場合は適用	SQL インジェクション攻撃などの SQL データベースの悪用に関連するリクエストパターンをブロックするルールセット。これにより、不正なクエリのリモートインジェクションを防ぐことができる。アプリケーションが SQL データベースにアクセスする場合に適用する。
	Linux オペレーティングシステム	×
LinuxOSを使用しないため	Linux 固有のローカルファイルインクルージョン (LFI) 攻撃など、Linux 固有の脆弱性の悪用に関連するリクエストパターンをブロックするルールセット。攻撃者がアクセスしてはならないファイルの内容を公開したり、コードを実行したりする攻撃を防ぐことができる。
	POSIX オペレーティングシステム	×
POSIXOSを使用しないため	POSIX および POSIX と同等のオペレーティングシステムに固有の脆弱性の悪用 (ローカルファイルインクルージョン (LFI) 攻撃など) に関連するリクエストパターンをブロックするルールセット。攻撃者がアクセスしてはならないファイルの内容を公開したり、コードを実行したりする攻撃を防ぐことができる。
	Windows オペレーティングシステム	×
WindowsOSを使用しないため	PowerShell コマンドのリモート実行など、Windows 固有の脆弱性の悪用に関連するリクエストパターンをブロックするルールセット。攻撃者が不正なコマンドを実行したり、悪意のあるコードを実行したりする脆弱性の悪用を防ぐことができる。
	PHP アプリケーション	×
PHPを使用しないため	安全でない PHP 関数のインジェクションなど、PHP プログラミング言語の使用に固有の脆弱性の悪用に関連するリクエストパターンをブロックするルールセット。
	WordPress アプリケーション	×
WordPressを使用しないため	WordPress サイト固有の脆弱性の悪用に関連するリクエストパターンをブロックするルールセット。
IP 評価ルールグループ	Amazon IP 評価リスト	○(1)	Amazon 内部脅威インテリジェンスに基づくルールセット。ボットやその他の脅威に関連付けられている IP アドレスをブロックすることでボットを軽減し、悪意のある攻撃者が脆弱なアプリケーションを発見するリスクを軽減する。
	匿名 IP リスト	○(2)	VPN、プロキシ、Tor ノード、ホスティングプロバイダー (AWS を含む)など、ビューワーIDの難読化を許可するサービスからのリクエストをブロックするルールセット。アプリケーションから ID を隠そうとするビューワーをブロックし、ボットの軽減や地理的制限を回避する。
AWS WAF ボットコントロールルールグループ	AWS WAF ボットコントロール	○(3)	ボットからのリクエストをブロックして管理するルール。このルールグループを使用する場合は追加料金が必要となる。

6.4.2	CloudFront
本システムではCDN(コンテンツデリバリーネットワーク)としてCloudFrontを利用することにより、キャッシュ機能によるオリジンサーバー（CloudFront がコンテンツを取得する元のウェブサーバー）の負荷軽減とコンテンツ配信のパフォーマンス向上を実現する。また、CloudFront はAWS Shield によるDDoS 保護機能が有効化されており、ネットワーク層およびトランスポート層のDDoS 攻撃に対する緩和が自動的に行われる。

S3の静的Webサイト向け、及びAPI Gateway向けのCloudFrontディストリビューションを作成する。
各ディストリビューションへはACMで管理するACM証明書、及びAWS WAFで作成したWebACLを設定する。
	設定値		
項目	Webサイト向け	API Gateway向け	備考
オリジンの設定		
	オリジンドメイン名	(S3バケット)	API の invoke URL	CloudFront がこのオリジンのオブジェクトの取得先としている Amazon S3 バケットまたは HTTP サーバーの DNS ドメイン名。
	オリジンのパス	(空白)	CloudFront で AWS リソースまたはカスタムオリジンのディレクトリにコンテンツがリクエストされるようにするには、スラッシュ (/) から始まるディレクトリパスを入力する。
	オリジンシールド	無効	オリジンの前に追加されるキャッシュレイヤー。「異なる地理的リージョンにビューワーが分散している場合」のユースケースに該当しないため無効にする。
	オリジンID	(自動入力)	デフォルトのキャッシュ動作に加えてキャッシュ動作を作成する場合、ここで指定した ID を使用して、そのキャッシュ動作のパスパターンにリクエストが一致した場合に CloudFront がリクエストをルーティングするオリジンまたはオリジングループを識別する。
	バケットアクセスの制限	無効	CloudFront URL のみを使用して Amazon S3 バケット内のオブジェクトにアクセスするようユーザーに要求する場合は有効化する。
	オリジンへの接続試行回数	3	CloudFront がオリジンへの接続を試行する回数。
	オリジンへの接続タイムアウト	10	オリジンへの接続を確立しようとするときに CloudFront が待機する秒数。
	オリジンカスタムヘッダー	(空白)	リクエストをオリジンに転送するときに CloudFront が常にカスタムヘッダーを追加するようにする。
キャッシュ動作の設定		
	パスパターン	デフォルト	パスパターン (例: images/*.jpg) を使用して、このキャッシュ動作をどのリクエストに割り当てるかを指定する。
	ビューワープロトコルポリシー	Redirect HTTP to HTTPS	HTTPS Only	CloudFront エッジロケーションのコンテンツへのアクセスに使用するビューワーのプロトコルポリシーを選択する。
	許可される HTTP メソッド	GET, HEAD
	GET, HEAD, OPTIONS, PUT, POST, PATCH, DELETE	CloudFront が処理してオリジンに転送する HTTP メソッドを指定する。
	フィールドレベル暗号化の設定	(空白)	特定のデータフィールドにフィールドレベル暗号化を適用する場合は、フィールドレベル暗号化の設定を選択する。
	キャッシュされる HTTP メソッド	GET, HEAD	ビューワーから OPTIONS リクエストが送信されたときに、オリジンからの応答を CloudFront でキャッシュするかどうかを指定する。
	キャッシュポリシー	Managed-CachingOptimized	CloudFront がコンテンツをキャッシュする方法を管理する。オリジンで再検証する前にオブジェクトをキャッシュする時間の設定（TTL）、CloudFront が HTTP ヘッダー、クエリ文字列パラメータおよび Cookie のパラメータによって変わるコンテンツをキャッシュする方法、および CloudFront が圧縮されたコンテンツをキャッシュする方法を制御する
	オリジンリクエストポリシー	(空白)	オリジンへのリクエストが行われたとき（キャッシュミスまたは再検証）に CloudFront がリクエストタイムメタデータをオリジンに送信する方法を管理する、CloudFront がオリジンに送信するヘッダー、クエリ文字列パラメータ、Cookie を設定できる。
	スムーズストリーミング	無効	Microsoft Smooth Streaming 形式のメディアファイルを配信するが、IIS サーバーがない場合は、[Yes (はい)] を選択する。
	ビューワーのアクセス制限 (署名付き URL の使用)	無効	このキャッシュ動作の PathPattern に一致するオブジェクトのリクエストで署名付き URL を使用する場合、[Yes (はい)] を選択する。
	オブジェクトを自動的に圧縮する	無効	ビューワーが圧縮コンテンツをサポートしている場合に、特定のタイプのファイルを CloudFront で自動的に圧縮するには、[Yes (はい)] を選択する。CloudFront がコンテンツを圧縮する際、ファイルが小さいためダウンロードはより高速に行われ、ウェブページは高速にレンダリングされる。
	Lambda 関数の関連付け	(空白)	CloudFront イベントのトリガーを Lambda 関数に追加するに
	リアルタイムログ	無効	ディストリビューションに対するリクエストの情報をリアルタイムで取得する
ディストリビューション設定		
	価格クラス	全てのエッジロケーション	CloudFront サービスに支払う上限価格に対応する価格クラスを選択する。
	AWS WAF ウェブACL	(作成したWebACL)	AWS WAF を使用して、指定した条件に基づいてリクエストを許可したりブロックしたりする場合は、このディストリビューションに関連付けられたウェブ ACL を選択する。
	代替ドメイン名 (CNAME)	(ドメイン名)	ディストリビューションを作成するときに CloudFront が割り当てるドメイン名ではなく、オブジェクトの URL に使用する 1 つ以上のドメイン名を指定する。
	SSL証明書	カスタムSSL証明書	ディストリビューションで使用する代替ドメイン名を指定した場合は、[Custom SSL Certificate (カスタム SSL 証明書)] を選択してこの代替ドメイン名を使用する許可を検証し、これを対象とする証明書選択する。
	独自 SSL クライアントのサポート	Server Name Indication (SNI) をサポートするクライアント	ディストリビューションに 1 つ以上の代替ドメイン名と独自 SSL 証明書を指定した場合は、CloudFront が HTTPS リクエストを処理する方法を選択する。とんどすべての最新のウェブブラウザとクライアントは、SNI をサポートしているため、ディストリビューションに接続できる。
	セキュリティポリシー	TLSv1.2_2019 (recommended)	CloudFront がビューワー (クライアント) との HTTPS 接続に使用するセキュリティポリシーを指定する。
	サポートされる HTTP バージョン	HTTP/2, HTTP/1.1, HTTP/1.0	ビューワーが CloudFront と通信するときにディストリビューションでサポートする HTTP バージョンを選択する。
	デフォルトのルートオブジェクト	(空白)	ビューワーがディストリビューション内のオブジェクト (http://www.example.com/product-description.html) ではなくディストリビューションのルート URL (http://www.example.com/) をリクエストするときに、CloudFront がリクエストする、オリジンからのオブジェクト (index.html など)。
	ログ記録	有効	CloudFront がオブジェクトに対する各リクエストの情報をログに記録し、ログファイルを Amazon S3 バケットに保存する。
	ログ用のバケット	S3(ログストレージ)	ログ記録を有効にした場合にCloudFront がアクセスログを保存する Amazon S3 バケット
	ログのプレフィックス	cf-website/	cf-api/	ログ記録を有効した場合にこのディストリビューションのアクセスログファイル名の先頭に CloudFront が追加する文字列 (ある場合) を指定する。 (例: exampleprefix/)。末尾のスラッシュ (/) はオプションだが、ログファイルの参照を容易にするためにこれを使用することが推奨される。
	Cookie のログ作成	無効	CloudFront で Cookie をアクセスログに含めるようにするには、有効を選択する。Amazon S3 は Cookie を処理しないため、S3がオリジンである場合は無効にする。
	IPv6 を有効にする	有効	一般的に、IPv6 ネットワークのユーザーがいてコンテンツにアクセスする場合は、IPv6 を有効にする必要がある。ただし、コンテンツへのアクセスを制限するために署名付き URL または署名付き Cookie を使用していて、コンテンツへのアクセスが可能な IP アドレスを制限する IP アドレスを含む IpAddress パラメータを使用している場合、IPv6 は有効にしない。
	コメント	(空白)	ディストリビューションを作成するときに、最大で 128 文字のコメントを含めることができる。
	ディストリビューションの状態	有効	ディストリビューションがデプロイされた後にディストリビューションを有効または無効のどちらにするか指定する。

6.4.3	API Gateway
ステージの設定が必要かも
	内容	
APIタイプ	REST API	
エンドポイントタイプ	エッジ最適化	CloudFrontからのみアクセスを許可する。

6.5	ウィルス対策
本システムではS3(データストレージ)にファイルをアップロードする際にアンチウィルスソフト(ClamAV)によるウィルススキャンを実施する。
ウィルスチェックで正常判定がでるまで、オブジェクトを読み取り不可とする。
ウィルスチェックで感染判定がでた場合は、ウィルスチェック完了後もオブジェクトを読み取り不可とし、判定結果の書き換えを禁止する。なお、オブジェクトのDeleteは許可する。
また、アンチウィルスソフト(ClamAV)の定義ファイルを1日に1回更新する。


